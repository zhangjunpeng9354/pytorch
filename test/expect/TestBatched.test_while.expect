graph(%a.1_data : Dynamic
      %a.1_mask : Dynamic
      %a.1_dims : Dynamic
      %b_data : Dynamic
      %b_mask : Dynamic
      %b_dims : Dynamic) {
  %7 : int = prim::Constant[value=2147483647]()
  %8 : Dynamic = aten::gt(%a.1_data, %b_data)
  %9 : Dynamic = aten::mul(%a.1_mask, %b_mask)
  %10 : Dynamic = aten::__or__(%a.1_dims, %b_dims)
  %11 : int = prim::Constant[value=0]()
  %12 : Dynamic = aten::mul(%8, %9)
  %13 : Dynamic = aten::sum(%12)
  %14 : Dynamic = aten::gt(%13, %11)
  %15 : int = prim::TensorToNum(%14)
  %16 : Dynamic, %17 : Dynamic, %18 : Dynamic, %a : Dynamic, %20 : Dynamic, %21 : Dynamic = prim::Loop(%7, %15, %8, %9, %10, %a.1_data, %a.1_mask, %a.1_dims)
    block0(%loop_num : int, %cond_data.2 : Dynamic, %cond_mask.3 : Dynamic, %cond_dims : Dynamic, %8_data : Dynamic, %8_mask : Dynamic, %8_dims : Dynamic) {
      %30 : int = prim::Constant[value=1]()
      %31 : Long() = prim::NumToTensor(%30)
      %alpha : float = prim::TensorToNum(%31)
      %data.1 : Dynamic = aten::sub(%8_data, %b_data, %alpha)
      %mask : Dynamic = aten::mul(%8_mask, %b_mask)
      %dims : Dynamic = aten::__or__(%8_dims, %b_dims)
      %36 : Dynamic = aten::gt(%data.1, %b_data)
      %37 : Dynamic = aten::mul(%mask, %b_mask)
      %38 : Dynamic = aten::__or__(%dims, %b_dims)
      %39 : int = prim::Constant[value=1]()
      %40 : Dynamic = aten::type_as(%cond_mask.3, %cond_data.2)
      %cond_mask.1 : Dynamic = aten::mul(%cond_data.2, %40)
      %42 : int = aten::dim(%cond_mask.1)
      %43 : int = aten::eq(%42, %39)
      %cond_data : Dynamic, %cond_mask : Dynamic, %data : Dynamic = prim::If(%43)
        block0() {
          %48 : int = aten::dim(%data.1)
          %49 : int = aten::sub(%48, %39)
          %50 : int = prim::Constant[value=1]()
          %data.3 : Dynamic = prim::Loop(%49, %50, %cond_mask.1)
            block0(%_ : int, %54 : Dynamic) {
              %55 : int = aten::dim(%54)
              %data.2 : Dynamic = aten::unsqueeze(%54, %55)
              %57 : int = prim::Constant[value=1]()
              -> (%57, %data.2)
            }
          %cond_data.1 : Dynamic = aten::expand_as(%data.3, %data.1)
          %cond_mask.2 : Dynamic = aten::expand_as(%data.3, %mask)
          -> (%cond_data.1, %cond_mask.2, %data.3)
        }
        block1() {
          -> (%cond_mask.1, %cond_mask.1, %cond_mask.1)
        }
      %res_data : Dynamic = aten::where(%cond_data, %data.1, %8_data)
      %res_mask : Dynamic = aten::where(%cond_mask, %mask, %8_mask)
      %res_dims : Dynamic = aten::__or__(%dims, %8_dims)
      %64 : int = prim::Constant[value=0]()
      %65 : Dynamic = aten::mul(%36, %37)
      %66 : Dynamic = aten::sum(%65)
      %67 : Dynamic = aten::gt(%66, %64)
      %68 : int = prim::TensorToNum(%67)
      -> (%68, %36, %37, %38, %res_data, %res_mask, %res_dims)
    }
  return (%a, %20, %21);
}
